version: '3.8'

services:
  db:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "3307:3306"
    volumes:
      - devdojo_data:/var/lib/mysql
    networks:
      - monitoring-net
    deploy:
      resources:
        limits:
          memory: 512M
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "--password=root" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - "./src/main/resources/prometheus.yml:/etc/prometheus/prometheus.yml"
    command: "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - monitoring-net
    deploy:
      resources:
        limits:
          memory: 128M

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - monitoring-net
    deploy:
      resources:
        limits:
          memory: 128M

#para rodar aplicação spring localmente basta comentar esse bloco e rodar docker compose up novamente que irá funcionar.
  springboot-essentials:
    image: juaovictor/springboot-essentials:0.0.1-SNAPSHOT
    container_name: springboot-essentials
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/anime?createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
    deploy:
      resources:
        limits:
          memory: 512M
    networks:
      - monitoring-net
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

volumes:
  devdojo_data:

networks:
  monitoring-net:
    driver: bridge